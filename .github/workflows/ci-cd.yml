name: CI/CD Pipeline for Web App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials # (If using AWS, for Terraform)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Or your chosen region

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0 # Or your preferred version

      - name: Terraform Init
        run: terraform init # Assuming your Terraform files are in a 'terraform' directory

      - name: Terraform Apply # Task 1: Provisioning Infrastructure
        run: terraform apply -auto-approve

      - name: Setup SSH Agent for Ansible # Crucial for SSH authentication
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Ansible # Task 2: Automating Configuration Management
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible

      - name: Prepare Ansible Inventory
        run: |
          # Dynamically create or update inventory.ini with the EC2 instance IP
          # This assumes your Terraform outputs the EC2 public IP.
          # Example output name: web_server_public_ip
          echo "[web]" > ansible/inventory.ini
          echo "${{ steps.terraform_apply_output.outputs.web_server_public_ip }} ansible_user=ubuntu" >> ansible/inventory.ini
          # Ensure ansible_user is correct for your AMI (e.g., ubuntu, ec2-user, centos)

      - name: Run Ansible Playbook # Task 2: Execute Playbook & Task 3: Continuous Deployment
        run: |
          ansible-playbook ansible/deploy.yml -i ansible/inventory.ini --user ubuntu
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      - name: Wait for 2 minutes before destroy
        run: sleep 120

      - name: Destroy Terraform
        run: terraform destroy -auto-approve
      
          
