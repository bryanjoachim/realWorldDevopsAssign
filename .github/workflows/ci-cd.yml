name: CI/CD Pipeline for Web App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get Terraform Output (Public IP)
        id: tf_output
        run: |
          echo "instance_public_ip=$(terraform output -raw instance_public_ip)" >> "$GITHUB_OUTPUT"

      - name: Setup SSH Agent for Ansible
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible

      - name: Prepare Ansible Inventory
        run: |
          mkdir -p ansible

          EC2_PUBLIC_IP="${{ steps.tf_output.outputs.instance_public_ip }}"

          if [ -z "$EC2_PUBLIC_IP" ]; then
            echo "Error: EC2_PUBLIC_IP is empty. Check Terraform outputs and step ID."
            exit 1
          fi

          echo "[web]" > ansible/inventory.ini
          echo "$EC2_PUBLIC_IP ansible_user=ec2-user" >> ansible/inventory.ini

          echo "Generated ansible/inventory.ini content:"
          cat ansible/inventory.ini
        shell: bash

      - name: Run Ansible Playbook
        run: |
          ansible-playbook ansible/deploy.yml -i ansible/inventory.ini --user ec2-user
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      - name: Wait for 2 minutes before destroy
        run: sleep 120

      - name: Destroy Terraform Resources
        run: terraform destroy -auto-approve
      
          
