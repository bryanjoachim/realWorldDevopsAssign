name: CI/CD Pipeline for Web App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Wait for instance to be ready
        run: sleep 60

      - name: Get instance public IP
        id: get_ip
        run: echo "instance_ip=$(terraform output -raw instance_public_ip)" >> $GITHUB_ENV


      - name: Create SSH key file
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > dynamo.pem
          chmod 600 dynamo.pem


      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no -i dynamo.pem ec2-user@$instance_ip 'echo SSH connection successful'
        env:
          instance_ip: ${{ env.instance_ip }}

      

      - name: Prepare Ansible Inventory
        run: |
          mkdir -p ansible
          echo "[web]" > ansible/inventory.ini
          echo "$instance_ip ansible_user=ec2-user" >> ansible/inventory.ini
          cat ansible/inventory.ini
        env:
          instance_ip: ${{ env.instance_ip }}

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook ansible/deploy.yml -i ansible/inventory.ini --user ec2-user
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      - name: Wait before destroy
        run: sleep 120

      - name: Destroy Terraform
        run: terraform destroy -auto-approve
